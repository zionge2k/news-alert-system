[project]
name = "news-alert-system"
version = "0.1.0"
description = ""
authors = [
    {name = "zion"}
]
readme = "README.md"
requires-python = "^3.11"
dependencies = [
    "aiohttp[speedups] (>=3.11.16,<4.0.0)",
    "beautifulsoup4 (>=4.13.3,<5.0.0)",
    "python-dotenv (>=1.1.0,<2.0.0)",
    "fake-useragent (>=2.1.0,<3.0.0)",
    "pydantic (>=2.11.3,<3.0.0)",
    "motor (>=3.7.0,<4.0.0)",
    "discord-py (>=2.5.2,<3.0.0)",
    "pydantic-settings (>=2.9.1,<3.0.0)",
    "setuptools (>=80.3.1,<81.0.0)",
    "discord (>=2.3.2,<3.0.0)"
]

[project.optional-dependencies]
dev = [
    "pre-commit (>=4.2.0)",
    "black (>=25.1.0)",
    "isort (>=6.0.1)",
    "pytest (>=7.4.3)",
    "pytest-cov (>=4.1.0)",
    "pytest-asyncio (>=0.23.2)"
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "news-alert-system"
version = "0.1.0"
description = ""
authors = ["zion"]
packages = [{include = "app"}, {include = "common"}, {include = "pipelines"}, {include = "infra"}, {include = "utils"}]

[tool.poetry.group.dev.dependencies]
coverage = "^7.8.0"
pytest-cov = "^6.1.1"

[tool.black]
line-length = 88
target-version = ['py311']

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.coverage.run]
source = ["app", "common", "pipelines", "infra", "utils"]
omit = ["*/tests/*", "*/venv/*", "*/.venv/*", "*/docs/*", "*/scripts/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "pass",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@abstract"
]